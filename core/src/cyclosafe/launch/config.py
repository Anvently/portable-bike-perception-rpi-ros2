from typing import List, Any
from std_msgs.msg import ColorRGBA
import os
from enum import IntEnum
from cyclosafe_config import Sensor, SensorTypeEnum

sensors_list = [
	Sensor(
		enable=True,
		type=SensorTypeEnum.CameraSensor,
		package="cyclosafe",
		executable="camera_pi",
		namespace="",
		description="camera node",
		port="",
		topic="images/compressed",
		color=None,
		parameters=[{'queue_size': 0,
            'resolution': [1440, 1080],
            'interval': 0.1,
            'compression': 90,
            'preview': False,
        }],
	),
	Sensor(
		enable=False,
		type=SensorTypeEnum.GPSSensor,
		package="cyclosafe",
		executable="gps",
		namespace="",
		description="gps node",
		port="/dev/ttyAMA5",
		transform=None,
		topic="gps",
		color=None,
		parameters=[{
				'baud': 115200,
				'port': "/dev/ttyAMA5",
				'period': 1.0,
		}],
	),
	Sensor(
		type=SensorTypeEnum.Lidar360Sensor,
		package="rplidar_ros",
		executable="rplidar_node",
		namespace="lidar360_1",
		description="360° lidar",
		port='/dev/ttyAMA0',
		topic="scan",
		color=None,
		parameters=[{'channel_type': 'serial',
						'serial_port': '/dev/ttyAMA0',
						'serial_baudrate': 460800,
						'frame_id': 'laser1',
						'inverted': False,
						'angle_compensate': False,
						'scan_mode': 'Standard',
						}],
	),
	Sensor(
		type=SensorTypeEnum.Lidar360Sensor,
		package="rplidar_ros",
		executable="rplidar_node",
		namespace="lidar360_2",
		description="360° lidar",
		port='/dev/ttyAMA2',
		topic="scan",
		color=None,
		parameters=[{'channel_type': 'serial',
						'serial_port': '/dev/ttyAMA2',
						'serial_baudrate': 460800,
						'frame_id': 'laserZ',
						'inverted': False,
						'angle_compensate': False,
						'scan_mode': 'Standard',
						}],
	),
]